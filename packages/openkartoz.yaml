# Configuration des entrées textuelles pour le Nabaztag
input_text:
  nabaztag_ip_address:
    name: Nabaztag Ip Address
    initial: "192.168.1.xxx"  # Adresse IP par défaut du Nabaztag
  nabaztag_color_1:
    name: Nabaztag Color 1
    initial: "ffff00"  # Couleur primaire en hexadécimal (jaune)
  nabaztag_color_2:
    name: Nabaztag Color 2
    initial: "000000"  # Couleur secondaire en hexadécimal (noir)

# État d'éveil du Nabaztag
input_boolean:
  nabaztag_awake:
    initial: on
    
# Configuration des contrôles numériques
input_number:
  nabaztag_ear_left:
    name: Nabaztag Ear Left
    initial: 0
    min: 0
    max: 16  # Position maximale de l'oreille gauche
    step: 1
  nabaztag_ear_right:
    name: Nabaztag Ear Right
    initial: 0
    min: 0
    max: 16  # Position maximale de l'oreille droite
    step: 1
  nabaztag_light_speed:
    name: Nabaztag Light Speed
    initial: 700
    min: 0
    max: 2000  # Vitesse maximale des effets lumineux
    step: 100

# Groupement des contrôles Nabaztag
group:
  nabaztag_utils:
    name: Nabaztag Utils
    entities:
      - script.nabaztag_moods

# Scripts de contrôle du Nabaztag
script:
  nabaztag_moods: 
    alias: "Talk!"  # Fait parler le Nabaztag
    sequence:
      - action: rest_command.nabaztag_moods

  nabaztag_wakeup:
    alias: "Wake Up"  # Réveille le Nabaztag
    sequence:
      - action: rest_command.nabaztag_wakeup
      - action: rest_command.nabaztag_light

  nabaztag_sleep:
    alias: "Sleep"  # Met le Nabaztag en veille
    sequence:
      - action: rest_command.nabaztag_sleep
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.nabaztag_awake

# Interrupteur template pour contrôler l'état d'éveil
switch:
  - platform: template
    switches:
      nabaztag_life:
        friendly_name: "Éveillé"
        value_template: "{{ is_state('input_boolean.nabaztag_awake', 'on') }}"
        turn_on:
          action: script.turn_on
          target:
            entity_id: script.nabaztag_wakeup
        turn_off:
          action: script.turn_on
          target:
            entity_id: script.nabaztag_sleep

# Configuration des commandes REST pour contrôler le Nabaztag
# source : https://www.openkarotz.org/api/
rest_command:
  nabaztag_moods:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/cgi-bin/apps/moods"
  nabaztag_wakeup:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/cgi-bin/wakeup?silent=1"
  nabaztag_sleep:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/cgi-bin/sleep"
  nabaztag_ears_random:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/cgi-bin/ears_random"
  nabaztag_ears:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/cgi-bin/ears?left={{ states('input_number.nabaztag_ear_left') }}&right={{ states('input_number.nabaztag_ear_right') }}&noreset=1"
  nabaztag_light:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/cgi-bin/leds?pulse=1&color={{ states('input_text.nabaztag_color_1') }}&speed={{ states('input_number.nabaztag_light_speed') }}&color2={{ states('input_text.nabaztag_color_2') }}"
  nabaztag_light_fixed:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/cgi-bin/leds?color={{ states('input_text.nabaztag_color_1') }}"
# ajout du TTS
# /cgi-bin/tts?voice=2&text=Bonjour les amis&nocache=undefined
  nabaztag_say:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/cgi-bin/tts?voice=2&text={{ text }}&nocache=undefined"
    # method: get
    # content_type: "application/x-www-form-urlencoded"
# ajout des sons
# sounds : bip1,bling,flush,install_ok,jet1,laser_15,ready,rfid_error,rfid_ok,saut1,start,twang_01,twang_04,return":"0"
  nabaztag_sound:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/cgi-bin/sound?id={{ sound }}"


# Capteur pour surveiller l'état de sommeil
sensor:
  - platform: rest
    resource: http://192.168.1.101/cgi-bin/status
    name: KarotzSleep
    value_template: '{{ value_json.sleep }}'

# ajout de la liste des sons
# input_select:
#   nabaztag_sound_selector:
#     name: Son du Karotz
#     options:
#       - bip1
#       - bling
#       - flush
#       - install_ok
#       - jet1
#       - laser_15
#       - ready
#       - rfid_error
#       - rfid_ok
#       - saut1
#       - start
#       - twang_01
#       - twang_04
#     initial: ready

    
# Automatisations
automation:
  # Gestion de l'état d'éveil
  - alias: "Karotz on"
    trigger:
      - trigger: state
        entity_id: sensor.karotz_sleep
        to: "0"
    actions:
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.karotz_awake
      - action: rest_command.karotz_say
        data:
          text: Bonjour tous le monde !

  - alias: "Karotz off"
    trigger:
      trigger: state
      entity_id: sensor.karotz_sleep
      to: '1'
    actions:
      - action: rest_command.karotz_say
        data:
          text: Bonne nuit les petits !
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.karotz_awake

  # Mise à jour des couleurs et effets lumineux
  - alias: "Update karotz color 1"
    trigger:
      trigger: state       
      entity_id: input_text.karotz_color_1
    actions:
      - action: rest_command.karotz_light

  - alias: "Update karotz color 2"
    trigger:
      - trigger: state
        entity_id: input_text.karotz_color_2
    actions:
      - action: rest_command.karotz_light

  - alias: "Update karotz light speed"
    trigger:
      - trigger: state
        entity_id: input_number.karotz_light_speed
    actions:
      - action: rest_command.karotz_light

  # Mise à jour de la position des oreilles
  - alias: "Update karotz ear left"
    trigger:
      - trigger: state
        entity_id: input_number.karotz_ear_left
    actions:
      - action: rest_command.karotz_ears

  - alias: "Update karotz ear right"
    trigger:
      - trigger: state
        entity_id: input_number.karotz_ear_right
    actions:
      - action: rest_command.karotz_ears
      
# Automatisations basées sur les risques de pluie
  - alias: Karotz - Mouvement des oreilles selon le risque de pluie
    description: "Déplace les oreilles du Karotz et annonce une phrase selon le risque de pluie toutes les heures à la minute 5"
    trigger:
      - trigger: time_pattern
        hours: "*"
        minutes: "5"
        seconds: "0"

    condition:
      - condition: time
        after: "08:00:00"
        before: "19:00:00"

    actions:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.treillieres_rain_chance
                above: 10
                below: 40
            sequence:
              - action: input_number.set_value
                data:
                  entity_id: input_number.karotz_ear_left
                  value: 16
              - action: input_number.set_value
                data:
                  entity_id: input_number.karotz_ear_right
                  value: 16
              - action: rest_command.karotz_say
                data:
                  text: >
                    Petit risque de pluie à {{ states('sensor.treillieres_rain_chance')|round(0) }}%. 
                    Ça sent la balade tranquille ! Sauf si tu es un sucre...

          - conditions:
              - condition: numeric_state
                entity_id: sensor.treillieres_rain_chance
                above: 40
                below: 60
            sequence:
              - action: input_number.set_value
                data:
                  entity_id: input_number.karotz_ear_left
                  value: 10
              - action: input_number.set_value
                data:
                  entity_id: input_number.karotz_ear_right
                  value: 10
              - action: rest_command.karotz_say
                data:
                  text: >
                    Risque de pluie modéré à {{ states('sensor.treillieres_rain_chance')|round(0) }}%. 
                    N'oublie pas ton parapluie... ou une capuche de secours, au cas où je t’arrose aussi !

          - conditions:
              - condition: numeric_state
                entity_id: sensor.treillieres_rain_chance
                above: 60
            sequence:
              - action: input_number.set_value
                data:
                  entity_id: input_number.karotz_ear_left
                  value: 6
              - action: input_number.set_value
                data:
                  entity_id: input_number.karotz_ear_right
                  value: 6
              - action: rest_command.karotz_say
                data:
                  text: >
                    Alerte pluie ! Le risque est à {{ states('sensor.treillieres_rain_chance')|round(0) }}%. 
                    Sauve qui peut ! Ou au moins protège tes oreilles !
    mode: single



# Automatisations basées sur la vitesse du vent
  - alias: Karotz - Annonce Vitesse du Vent
    description: "Annonce vocale et clignotement selon la vitesse du vent"
    trigger:
      - trigger: time_pattern
        hours: "*"
        minutes: "15"
        seconds: "0"

    condition:
      - condition: time
        after: "08:00:00"
        before: "19:00:00"

    actions:
      - choose:
        - conditions:
            - condition: numeric_state
              entity_id: sensor.weather_station_vitesse_moyenne_du_vent_km_h
              below: 1
          sequence:
            - action: input_number.set_value
              data:
                entity_id: input_number.karotz_light_speed
                value: 2000
            - action: rest_command.karotz_say
              data:
                text: Pas un brin de vent ! Le vent souffle à {{ states('sensor.weather_station_vitesse_moyenne_du_vent_km_h')|round(1) }} KMH

        - conditions:
            - condition: numeric_state
              entity_id: sensor.weather_station_vitesse_moyenne_du_vent_km_h
              above: 1
              below: 5
          sequence:
            - action: input_number.set_value
              data:
                entity_id: input_number.karotz_light_speed
                value: 1834
            - action: rest_command.karotz_say
              data:
                text: C’est pas aujourd’hui que je vais sortir le cerf-volant ! Le vent souffle à {{ states('sensor.weather_station_vitesse_moyenne_du_vent_km_h')|round(1) }} KMH

        - conditions:
            - condition: numeric_state
              entity_id: sensor.weather_station_vitesse_moyenne_du_vent_km_h
              above: 6
              below: 11
          sequence:
            - action: input_number.set_value
              data:
                entity_id: input_number.karotz_light_speed
                value: 1668
            - action: rest_command.karotz_say
              data:
                text: Brou, j'ai les oreilles qui s’ébouriffent ! Le vent souffle à {{ states('sensor.weather_station_vitesse_moyenne_du_vent_km_h')|round(1) }} KMH

        - conditions:
            - condition: numeric_state
              entity_id: sensor.weather_station_vitesse_moyenne_du_vent_km_h
              above: 12
              below: 19
          sequence:
            - action: input_number.set_value
              data:
                entity_id: input_number.karotz_light_speed
                value: 1502
            - action: rest_command.karotz_say
              data:
                text: Haï, ça souffle un peu par ici ! Le vent souffle à {{ states('sensor.weather_station_vitesse_moyenne_du_vent_km_h')|round(1) }} KMH

        - conditions:
            - condition: numeric_state
              entity_id: sensor.weather_station_vitesse_moyenne_du_vent_km_h
              above: 20
              below: 28
          sequence:
            - action: input_number.set_value
              data:
                entity_id: input_number.karotz_light_speed
                value: 1336
            - action: rest_command.karotz_say
              data:
                text: Ah, le vent est bien réveillé ! Le vent souffle à {{ states('sensor.weather_station_vitesse_moyenne_du_vent_km_h')|round(1) }} KMH

        - conditions:
            - condition: numeric_state
              entity_id: sensor.weather_station_vitesse_moyenne_du_vent_km_h
              above: 29
              below: 38
          sequence:
            - action: input_number.set_value
              data:
                entity_id: input_number.karotz_light_speed
                value: 1170
            - action: rest_command.karotz_say
              data:
                text: Hey, ça souffle ! Le vent souffle à {{ states('sensor.weather_station_vitesse_moyenne_du_vent_km_h')|round(1) }} KMH

        - conditions:
            - condition: numeric_state
              entity_id: sensor.weather_station_vitesse_moyenne_du_vent_km_h
              above: 39
              below: 49
          sequence:
            - action: input_number.set_value
              data:
                entity_id: input_number.karotz_light_speed
                value: 1004
            - action: rest_command.karotz_say
              data:
                text: Hou là là, je vais m’envoler ! Le vent souffle à {{ states('sensor.weather_station_vitesse_moyenne_du_vent_km_h')|round(1) }} KMH

        - conditions:
            - condition: numeric_state
              entity_id: sensor.weather_station_vitesse_moyenne_du_vent_km_h
              above: 50
              below: 61
          sequence:
            - action: input_number.set_value
              data:
                entity_id: input_number.karotz_light_speed
                value: 838
            - action: rest_command.karotz_say
              data:
                text: Ouaï, bah là je rentre dans mon terrier, tchao ! Le vent souffle à {{ states('sensor.weather_station_vitesse_moyenne_du_vent_km_h')|round(1) }} KMH
    mode: single

# Automatisations basées sur la température
  - alias: Karotz - Couleur en fonction de la température
    description: "Change la couleur et parle selon la température extérieure toutes les heures à la minute 35"
    trigger:
      - trigger: time_pattern
        hours: "*"
        minutes: "35"
        seconds: "0"

    condition:
      - condition: time
        after: "08:00:00"
        before: "19:00:00"

    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.weather_station_temperature_exterieur
                below: -10
            sequence:
              - action: input_text.set_value
                data:
                  entity_id: input_text.karotz_color_1
                  value: "1a00ff"
              - action: input_text.set_value
                data:
                  entity_id: input_text.karotz_color_2
                  value: "000000"
              - action: rest_command.karotz_say
                data:
                  text: Penssez a prendre vos moufles ! Il fait {{ states('sensor.pac_atom_temp_ext')|round(1) }} degrés.

          - conditions:
              - condition: numeric_state
                entity_id: sensor.weather_station_temperature_exterieur
                above: 0
                below: 10
            sequence:
              - action: input_text.set_value
                data:
                  entity_id: input_text.karotz_color_1
                  value: "00FF00"
              - action: input_text.set_value
                data:
                  entity_id: input_text.karotz_color_2
                  value: "000000"
              - action: rest_command.karotz_say
                data:
                  text: J'ai les carotes geler ! Il fait {{ states('sensor.pac_atom_temp_ext')|round(1) }} degrés.

          - conditions:
              - condition: numeric_state
                entity_id: sensor.weather_station_temperature_exterieur
                above: 10
                below: 20
            sequence:
              - action: input_text.set_value
                data:
                  entity_id: input_text.karotz_color_1
                  value: "A6FF00"
              - action: input_text.set_value
                data:
                  entity_id: input_text.karotz_color_2
                  value: "000000"
              - action: rest_command.karotz_say
                data:
                  text: Brou, je garde mon manteau quand même ! Il fait {{ states('sensor.pac_atom_temp_ext')|round(1) }} degrés.

          - conditions:
              - condition: numeric_state
                entity_id: sensor.weather_station_temperature_exterieur
                above: 20
                below: 30
            sequence:
              - action: input_text.set_value
                data:
                  entity_id: input_text.karotz_color_1
                  value: "FF9100"
              - action: input_text.set_value
                data:
                  entity_id: input_text.karotz_color_2
                  value: "000000"
              - action: rest_command.karotz_say
                data:
                  text: Voila l'été, enfin ! Il fait {{ states('sensor.pac_atom_temp_ext')|round(1) }} degrés.

          - conditions:
              - condition: numeric_state
                entity_id: sensor.weather_station_temperature_exterieur
                above: 30
            sequence:
              - action: input_text.set_value
                data:
                  entity_id: input_text.karotz_color_1
                  value: "FF0000"
              - action: input_text.set_value
                data:
                  entity_id: input_text.karotz_color_2
                  value: "000000"
              - action: rest_command.karotz_say
                data:
                  text: Penssez a boire, il fait très chaud ! Il fait {{ states('sensor.pac_atom_temp_ext')|round(1) }} degrés.
    mode: single
